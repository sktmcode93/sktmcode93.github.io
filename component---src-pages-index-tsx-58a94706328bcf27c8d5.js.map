{"version":3,"file":"component---src-pages-index-tsx-58a94706328bcf27c8d5.js","mappings":"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","sources":["webpack://gatsby-starter-apple/../src/image-utils.ts","webpack://gatsby-starter-apple/../src/components/hooks.ts","webpack://gatsby-starter-apple/../src/components/picture.tsx","webpack://gatsby-starter-apple/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-apple/../src/components/placeholder.tsx","webpack://gatsby-starter-apple/../src/components/main-image.tsx","webpack://gatsby-starter-apple/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-apple/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-apple/../src/components/static-image.server.tsx","webpack://gatsby-starter-apple/../src/components/static-image.tsx","webpack://gatsby-starter-apple/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://gatsby-starter-apple/./src/components/postGrid/card/centeredImg.tsx","webpack://gatsby-starter-apple/./src/components/postGrid/card/card.tsx","webpack://gatsby-starter-apple/./src/components/postGrid/card/index.ts","webpack://gatsby-starter-apple/./src/components/postGrid/useInfiniteScroll.ts","webpack://gatsby-starter-apple/./src/components/postGrid/postGrid.tsx","webpack://gatsby-starter-apple/./src/components/postGrid/index.ts","webpack://gatsby-starter-apple/./src/components/catetgoryFilter/useScrollCenter.ts","webpack://gatsby-starter-apple/./src/components/catetgoryFilter/categoryFilter.tsx","webpack://gatsby-starter-apple/./src/components/catetgoryFilter/index.ts","webpack://gatsby-starter-apple/./src/pages/index.tsx","webpack://gatsby-starter-apple/./src/styles/category.ts","webpack://gatsby-starter-apple/./src/styles/dateTime.ts","webpack://gatsby-starter-apple/./node_modules/lodash/_Symbol.js","webpack://gatsby-starter-apple/./node_modules/lodash/_arrayMap.js","webpack://gatsby-starter-apple/./node_modules/lodash/_arrayReduce.js","webpack://gatsby-starter-apple/./node_modules/lodash/_asciiWords.js","webpack://gatsby-starter-apple/./node_modules/lodash/_baseGetTag.js","webpack://gatsby-starter-apple/./node_modules/lodash/_basePropertyOf.js","webpack://gatsby-starter-apple/./node_modules/lodash/_baseToString.js","webpack://gatsby-starter-apple/./node_modules/lodash/_createCompounder.js","webpack://gatsby-starter-apple/./node_modules/lodash/_deburrLetter.js","webpack://gatsby-starter-apple/./node_modules/lodash/_freeGlobal.js","webpack://gatsby-starter-apple/./node_modules/lodash/_getRawTag.js","webpack://gatsby-starter-apple/./node_modules/lodash/_hasUnicodeWord.js","webpack://gatsby-starter-apple/./node_modules/lodash/_objectToString.js","webpack://gatsby-starter-apple/./node_modules/lodash/_root.js","webpack://gatsby-starter-apple/./node_modules/lodash/_unicodeWords.js","webpack://gatsby-starter-apple/./node_modules/lodash/deburr.js","webpack://gatsby-starter-apple/./node_modules/lodash/isArray.js","webpack://gatsby-starter-apple/./node_modules/lodash/isObjectLike.js","webpack://gatsby-starter-apple/./node_modules/lodash/isSymbol.js","webpack://gatsby-starter-apple/./node_modules/lodash/kebabCase.js","webpack://gatsby-starter-apple/./node_modules/lodash/toString.js","webpack://gatsby-starter-apple/./node_modules/lodash/words.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        document.addEventListener(`load`, function onLoadListener() {\n          document.removeEventListener(`load`, onLoadListener)\n\n          onStartLoad?.({\n            wasCached: true,\n          })\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React, { useMemo } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport type { IGatsbyImageData } from \"gatsby-plugin-image\"\r\n\r\nimport type { Query } from \"Types/GraphQL\"\r\nimport type Post from \"Types/Post\"\r\n\r\ninterface CenteredImgProps extends Pick<Post, \"alt\"> {\r\n  src: Post[\"thumbnail\"]\r\n}\r\n\r\nconst DEFAULT_ALT = \"Thumbnail Image\"\r\n\r\nconst CenteredImg: React.FC<CenteredImgProps> = ({ src, alt }) => {\r\n  const data = useStaticQuery<Query>(graphql`\r\n    query {\r\n      allImageSharp {\r\n        edges {\r\n          node {\r\n            id\r\n            gatsbyImageData(\r\n              layout: CONSTRAINED\r\n              aspectRatio: 1.77\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const image = useMemo(() => {\r\n    const imageSharp = data.allImageSharp.edges.find(\r\n      edge => edge.node.id === src\r\n    )\r\n    return imageSharp?.node.gatsbyImageData as IGatsbyImageData\r\n  }, [src, data.allImageSharp.edges])\r\n\r\n  return (\r\n    <ThumbnailWrapper>\r\n      <InnerWrapper>\r\n        <GatsbyImage image={image} loading=\"eager\" alt={alt ?? DEFAULT_ALT} />\r\n      </InnerWrapper>\r\n    </ThumbnailWrapper>\r\n  )\r\n}\r\n\r\nexport const ThumbnailWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: 0;\r\n    background-color: var(--color-dimmed);\r\n    transition: 0.3s ease;\r\n  }\r\n`\r\n\r\nconst InnerWrapper = styled.div`\r\n  overflow: hidden;\r\n`\r\n\r\nexport default React.memo(CenteredImg)\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport type Post from \"Types/Post\"\r\nimport Category from \"Styles/category\"\r\nimport DateTime from \"Styles/dateTime\"\r\nimport CenteredImg from \"./centeredImg\"\r\n\r\ntype CardProps = Pick<\r\n  Post,\r\n  \"thumbnail\" | \"alt\" | \"category\" | \"title\" | \"desc\" | \"date\"\r\n>\r\n\r\nconst Card: React.FC<CardProps> = ({\r\n  thumbnail,\r\n  alt,\r\n  category,\r\n  title,\r\n  desc,\r\n  date,\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      <CenteredImg src={thumbnail} alt={alt} />\r\n      <Text>\r\n        <div>\r\n          <Category>{category}</Category>\r\n          <Title>{title}</Title>\r\n          <Desc>{desc}</Desc>\r\n        </div>\r\n        <DateTime dateTime={date}>{date}</DateTime>\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  height: 100%;\r\n  border-radius: var(--border-radius-base);\r\n  background-color: var(--color-card);\r\n\r\n  /* Fix Safari overflow:hidden with border radius not working error */\r\n  transform: translateZ(0);\r\n`\r\n\r\nconst Text = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n  justify-content: space-between;\r\n  padding: var(--sizing-md);\r\n\r\n  & > * {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Title = styled.h3`\r\n  margin-top: var(--sizing-xs);\r\n  font-size: var(--text-lg);\r\n  font-weight: var(--font-weight-bold);\r\n  line-height: 1.3;\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.md}) {\r\n    font-size: 1.3125rem;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    font-size: var(--text-md);\r\n  }\r\n`\r\n\r\nconst Desc = styled.p`\r\n  line-height: 1.5;\r\n  margin-top: 8px;\r\n  padding-bottom: var(--sizing-sm);\r\n  color: var(--color-text-2);\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  word-break: break-word;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nexport default React.memo(Card)\r\n","import Card from \"./card\"\r\n\r\nexport default Card\r\n","import { useState, useEffect, useLayoutEffect, useRef } from \"react\"\r\n\r\nimport type Post from \"Types/Post\"\r\n\r\ninterface UseInfiniteScrollProps {\r\n  posts: Post[]\r\n  scrollEdgeRef: React.RefObject<HTMLDivElement>\r\n  maxPostNum: number\r\n  offsetY: number\r\n}\r\n\r\nconst useInfiniteScroll = ({\r\n  posts,\r\n  scrollEdgeRef,\r\n  maxPostNum = 10,\r\n  offsetY = 400,\r\n}: UseInfiniteScrollProps) => {\r\n  const [hasMore, setHasMore] = useState(false)\r\n  const [currentList, setCurrentList] = useState<Post[]>([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [observerLoading, setObserverLoading] = useState(false)\r\n\r\n  const observer = useRef<IntersectionObserver>()\r\n\r\n  useLayoutEffect(() => {\r\n    if (!posts.length || isLoading) return\r\n    setHasMore(posts.length > maxPostNum)\r\n    setCurrentList([...posts.slice(0, maxPostNum)])\r\n    setIsLoading(true)\r\n  }, [isLoading, posts, maxPostNum])\r\n\r\n  useEffect(() => {\r\n    const loadEdges = () => {\r\n      const currentLength = currentList.length\r\n      const more = currentLength < posts.length\r\n      const nextEdges = more\r\n        ? posts.slice(currentLength, currentLength + maxPostNum)\r\n        : []\r\n      setHasMore(more)\r\n      setCurrentList([...currentList, ...nextEdges])\r\n    }\r\n\r\n    const scrollEdgeElem = scrollEdgeRef.current\r\n\r\n    const option = {\r\n      rootMargin: `0px 0px ${offsetY}px 0px`,\r\n      threshold: [0],\r\n    }\r\n\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (!hasMore) return\r\n      entries.forEach(entry => {\r\n        if (!observerLoading) {\r\n          setObserverLoading(true)\r\n          return\r\n        }\r\n        if (entry.isIntersecting) loadEdges()\r\n      })\r\n    }, option)\r\n\r\n    observer.current.observe(scrollEdgeElem!)\r\n\r\n    return () => observer.current && observer.current.disconnect()\r\n  })\r\n\r\n  return currentList\r\n}\r\n\r\nexport default useInfiniteScroll\r\n","import React, { useRef } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\n\r\nimport type Post from \"Types/Post\"\r\nimport Card from \"./card\"\r\nimport useInfiniteScroll from \"./useInfiniteScroll\"\r\nimport { ThumbnailWrapper } from \"./card/centeredImg\"\r\n\r\ninterface PostGridProps {\r\n  posts: Post[]\r\n}\r\n\r\nconst PostGrid: React.FC<PostGridProps> = ({ posts }) => {\r\n  const scrollEdgeRef = useRef<HTMLDivElement>(null)\r\n  const currentList = useInfiniteScroll({\r\n    posts,\r\n    scrollEdgeRef,\r\n    maxPostNum: 10,\r\n    offsetY: 200,\r\n  })\r\n\r\n  return (\r\n    <Grid role=\"list\">\r\n      {currentList.map(data => {\r\n        const { id, slug, title, desc, date, category, thumbnail, alt } = data\r\n        const ariaLabel = `${title} - ${category} - Posted on ${date}`\r\n        return (\r\n          <List key={id} role=\"listitem\">\r\n            <Link to={slug ?? \"\"} aria-label={ariaLabel}>\r\n              <Card\r\n                thumbnail={thumbnail}\r\n                alt={alt}\r\n                category={category}\r\n                title={title}\r\n                desc={desc}\r\n                date={date}\r\n              />\r\n            </Link>\r\n          </List>\r\n        )\r\n      })}\r\n      <div ref={scrollEdgeRef} />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst Grid = styled.ul`\r\n  display: grid;\r\n  grid-gap: var(--grid-gap-xl);\r\n  grid-template-columns: repeat(2, 1fr);\r\n  list-style: none;\r\n\r\n  & > li {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    grid-gap: var(--grid-gap-lg);\r\n  }\r\n`\r\n\r\nconst List = styled.li`\r\n  box-sizing: border-box;\r\n  grid-column: span 1;\r\n\r\n  a {\r\n    display: block;\r\n    height: 100%;\r\n  }\r\n\r\n  a:hover ${ThumbnailWrapper}::after, a:focus ${ThumbnailWrapper}::after {\r\n    opacity: 1;\r\n  }\r\n\r\n  & .gatsby-image-wrapper {\r\n    transition: opacity 1s ease-out, transform 0.5s ease;\r\n  }\r\n\r\n  a:hover,\r\n  a:focus {\r\n    .gatsby-image-wrapper {\r\n      transform: scale(1.03);\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    grid-column: span 2;\r\n  }\r\n`\r\n\r\nexport default PostGrid\r\n","import PostGrid from \"./postGrid\"\r\n\r\nexport default PostGrid\r\n","import { useLayoutEffect } from \"react\"\r\n\r\ninterface UseScrollCenterProps {\r\n  ref: React.RefObject<HTMLUListElement>\r\n  targetId: string\r\n}\r\n\r\nconst useScrollCenter = ({ ref, targetId }: UseScrollCenterProps) => {\r\n  useLayoutEffect(() => {\r\n    const categoryWrapEl = ref.current\r\n\r\n    if (!categoryWrapEl) {\r\n      return\r\n    }\r\n\r\n    const isScrollActivated =\r\n      categoryWrapEl.scrollWidth >= categoryWrapEl.offsetWidth\r\n\r\n    if (!isScrollActivated) {\r\n      return\r\n    }\r\n\r\n    const activeCategoryEl = categoryWrapEl.querySelector<HTMLUListElement>(\r\n      `#${targetId}`\r\n    )\r\n\r\n    if (!activeCategoryEl) {\r\n      return\r\n    }\r\n\r\n    const offsetX = activeCategoryEl.offsetLeft - categoryWrapEl.offsetLeft\r\n    categoryWrapEl.scrollTo(\r\n      offsetX -\r\n        categoryWrapEl.offsetWidth / 2 +\r\n        activeCategoryEl.offsetWidth / 2,\r\n      0\r\n    )\r\n  }, [ref, targetId])\r\n}\r\n\r\nexport default useScrollCenter\r\n","import React, { useRef } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport type { GatsbyLinkProps } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\nimport type { MarkdownRemarkGroupConnection } from \"Types/GraphQL\"\r\nimport useScrollCenter from \"./useScrollCenter\"\r\n\r\nconst ACTIVE = \"active\"\r\n\r\ninterface CategoryFilterProps {\r\n  categoryList: MarkdownRemarkGroupConnection[]\r\n}\r\n\r\ntype LinkPropsGetter = GatsbyLinkProps<unknown>[\"getProps\"]\r\n\r\nconst CategoryFilter: React.FC<CategoryFilterProps> = ({ categoryList }) => {\r\n  const categoryRef = useRef<HTMLUListElement>(null)\r\n  const ALL_CATEGORY_NAME = \"All\"\r\n  const isActive: LinkPropsGetter = ({ isCurrent }) =>\r\n    isCurrent ? { id: ACTIVE, tabIndex: -1 } : {}\r\n\r\n  useScrollCenter({ ref: categoryRef, targetId: ACTIVE })\r\n\r\n  return (\r\n    <Nav aria-label=\"Category Filter\">\r\n      <CategoryTitle>Category</CategoryTitle>\r\n      <CategoryButton getProps={isActive} to=\"/\">\r\n        {ALL_CATEGORY_NAME}\r\n      </CategoryButton>\r\n      <Divider />\r\n      <CategoryUl ref={categoryRef} className=\"invisible-scrollbar\">\r\n        {categoryList\r\n          .sort((a, b) => b.totalCount - a.totalCount)\r\n          .map(category => {\r\n            const { fieldValue } = category\r\n            return (\r\n              <li key={fieldValue}>\r\n                <CategoryButton\r\n                  getProps={isActive}\r\n                  to={`/category/${kebabCase(fieldValue!)}/`}\r\n                >\r\n                  {fieldValue}\r\n                </CategoryButton>\r\n              </li>\r\n            )\r\n          })}\r\n      </CategoryUl>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: var(--color-card);\r\n  margin-bottom: 48px;\r\n  padding: 12px var(--sizing-md);\r\n  border-radius: var(--border-radius-base);\r\n\r\n  a#active {\r\n    color: var(--color-white);\r\n    background-color: var(--color-blue);\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    padding: 12px;\r\n  }\r\n`\r\n\r\nconst CategoryTitle = styled.em`\r\n  position: static;\r\n  width: auto;\r\n  height: auto;\r\n  clip: auto;\r\n  white-space: auto;\r\n\r\n  flex-shrink: 0;\r\n  font-size: var(--text-base);\r\n  font-weight: var(--font-weight-semi-bold);\r\n  font-style: initial;\r\n  margin-right: var(--sizing-lg);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    overflow: hidden;\r\n    clip: rect(1px, 1px, 1px, 1px);\r\n    white-space: no-wrap;\r\n  }\r\n`\r\n\r\nconst CategoryButton = styled(Link)`\r\n  cursor: pointer;\r\n  display: block;\r\n  background-color: var(--color-category-button);\r\n  padding: var(--sizing-sm) var(--sizing-base);\r\n  border-radius: var(--border-radius-base);\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-semi-bold);\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    color: var(--color-white);\r\n    background-color: var(--color-blue);\r\n  }\r\n\r\n  &:focus-visible {\r\n    color: var(--color-white);\r\n    background-color: var(--color-blue);\r\n  }\r\n`\r\n\r\nconst Divider = styled.div`\r\n  width: 1px;\r\n  height: 32px;\r\n  margin: 0 var(--sizing-sm);\r\n  transform: translateX(-50%);\r\n  background-color: var(--color-divider);\r\n`\r\n\r\nconst CategoryUl = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  overflow-x: scroll;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n\r\n  li + li {\r\n    margin-left: 6px;\r\n  }\r\n`\r\n\r\nexport default CategoryFilter\r\n","import CategoryFilter from \"./categoryFilter\"\r\n\r\nexport default CategoryFilter\r\n","import React, { useState, useLayoutEffect } from \"react\"\r\nimport type { PageProps } from \"gatsby\"\r\nimport { graphql } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\n\r\nimport type { Query, MarkdownRemarkFrontmatter } from \"Types/GraphQL\"\r\nimport type Post from \"Types/Post\"\r\nimport useSiteMetadata from \"Hooks/useSiteMetadata\"\r\nimport Layout from \"Layouts/layout\"\r\nimport SEO from \"Components/seo\"\r\nimport PostGrid from \"Components/postGrid\"\r\nimport CategoryFilter from \"Components/catetgoryFilter\"\r\n\r\nconst Home = ({\r\n  pageContext,\r\n  data,\r\n}: PageProps<Query, MarkdownRemarkFrontmatter>) => {\r\n  const [posts, setPosts] = useState<Post[]>([])\r\n  const currentCategory = pageContext.category\r\n  const postData = data.allMarkdownRemark.edges\r\n\r\n  useLayoutEffect(() => {\r\n    const filteredPostData = currentCategory\r\n      ? postData.filter(\r\n          ({ node }) => node?.frontmatter?.category === currentCategory\r\n        )\r\n      : postData\r\n\r\n    filteredPostData.forEach(({ node }) => {\r\n      const { id } = node\r\n      const { slug } = node?.fields!\r\n      const { title, desc, date, category, thumbnail, alt } = node?.frontmatter!\r\n      const { childImageSharp } = thumbnail!\r\n\r\n      setPosts(prevPost => [\r\n        ...prevPost,\r\n        {\r\n          id,\r\n          slug,\r\n          title,\r\n          desc,\r\n          date,\r\n          category,\r\n          thumbnail: childImageSharp?.id,\r\n          alt,\r\n        },\r\n      ])\r\n    })\r\n  }, [currentCategory, postData])\r\n\r\n  const site = useSiteMetadata()\r\n  const postTitle = currentCategory || site.postTitle\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      <Main>\r\n        <Content>\r\n          <CategoryFilter categoryList={data.allMarkdownRemark.group} />\r\n          <PostTitle>{postTitle}</PostTitle>\r\n          <PostGrid posts={posts} />\r\n        </Content>\r\n      </Main>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst Main = styled.main`\r\n  min-width: var(--min-width);\r\n  min-height: calc(100vh - var(--nav-height) - var(--footer-height));\r\n  background-color: var(--color-background);\r\n`\r\n\r\nconst Content = styled.div`\r\n  box-sizing: content-box;\r\n  width: 87.5%;\r\n  max-width: var(--width);\r\n  padding-top: var(--sizing-lg);\r\n  padding-bottom: var(--sizing-lg);\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    padding-top: var(--grid-gap-lg);\r\n    width: 87.5%;\r\n  }\r\n`\r\n\r\nconst PostTitle = styled.h2`\r\n  font-size: 2rem;\r\n  font-weight: var(--font-weight-extra-bold);\r\n  margin-bottom: var(--sizing-md);\r\n  line-height: 1.21875;\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    font-size: 1.75rem;\r\n  }\r\n`\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/(posts/blog)/\" } }\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      group(field: frontmatter___category) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            category\r\n            date(formatString: \"YYYY-MM-DD\")\r\n            desc\r\n            thumbnail {\r\n              childImageSharp {\r\n                id\r\n              }\r\n              base\r\n            }\r\n            alt\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Home\r\n","import styled from \"styled-components\"\r\n\r\nconst Category = styled.span`\r\n  display: block;\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-semi-bold);\r\n  color: var(--color-text-3);\r\n`\r\n\r\nexport default Category\r\n","import styled from \"styled-components\"\r\n\r\nconst DateTime = styled.time`\r\n  margin-top: 12px;\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-regular);\r\n  color: var(--color-text-3);\r\n`\r\n\r\nexport default DateTime\r\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n"],"names":["height","prototype","format","isLoading","isLoaded","images","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","fallbackImage","paddingTop","maxWidth","display","React","alt","role","src","children","props","Fragment","Sizer","q","H","P","srcSet","decoding","undefined","fallback","t","sizes","Image","length","map","media","type","key","propTypes","PropTypes","Picture","displayName","isRequired","e","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","getWrapperProps","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","getSizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","document","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","memo","warn","GatsbyImageHydrator","GatsbyImage","se","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage","camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","trim","filter","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","CenteredImg","data","useStaticQuery","imageSharp","allImageSharp","edges","find","edge","node","id","gatsbyImageData","ThumbnailWrapper","InnerWrapper","styled","Card","thumbnail","category","title","desc","date","Wrapper","Text","Category","Title","Desc","DateTime","dateTime","theme","device","md","sm","posts","scrollEdgeRef","maxPostNum","offsetY","useState","hasMore","setHasMore","currentList","setCurrentList","setIsLoading","observerLoading","setObserverLoading","observer","scrollEdgeElem","option","rootMargin","threshold","IntersectionObserver","entries","forEach","entry","currentLength","more","nextEdges","isIntersecting","observe","disconnect","Grid","List","useInfiniteScroll","slug","ariaLabel","Link","to","targetId","categoryWrapEl","scrollWidth","offsetWidth","activeCategoryEl","offsetX","offsetLeft","scrollTo","ACTIVE","Nav","CategoryTitle","CategoryButton","withConfig","Divider","CategoryUl","categoryList","categoryRef","isActive","isCurrent","tabIndex","useScrollCenter","getProps","sort","a","b","totalCount","fieldValue","kebabCase","Main","componentId","Content","PostTitle","pageContext","setPosts","currentCategory","postData","allMarkdownRemark","frontmatter","fields","childImageSharp","prevPost","site","useSiteMetadata","postTitle","Layout","SEO","CategoryFilter","group","PostGrid","Symbol","array","iteratee","index","result","accumulator","initAccum","reAsciiWord","match","getRawTag","objectToString","symToStringTag","toStringTag","value","object","arrayMap","isSymbol","symbolProto","symbolToString","toString","baseToString","call","arrayReduce","deburr","words","reApos","RegExp","callback","deburrLetter","basePropertyOf","freeGlobal","g","objectProto","hasOwnProperty","nativeObjectToString","isOwn","tag","unmasked","reHasUnicodeWord","freeSelf","self","Function","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","rsEmoji","reUnicodeWord","reLatin","reComboMark","baseGetTag","isObjectLike","createCompounder","word","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard"],"sourceRoot":""}